management:
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true

spring:
  #
  # spring.rabbitmq.addresses=172.17.8.220
  #
  rabbitmq:
    host: 172.17.8.220
    password: admin #7UmApoaOqhTWLUM9xGIpcym7cEFPkYSi5KzK
    username: admin #root-a2617d51-c183-b1d1-5204-1f6d2ffd82dc
    #username: admin
    #password: admin
    virtual-host: default
  kafka:
    bootstrap-servers: "172.17.8.220:9092"
    consumer:
      bootstrap-servers: "172.17.8.220:9092"
      group-id: "notifications"
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  #
  # Mail Service
  #
  mail:
    host: "smtpout.secureserver.net"
    port: 465
    username: "ianache@crossnetcorp.com"
    password: CHANGEME
    protocol: smtp
    properties.mail.smtp:
      auth: true
      ssl.enable: true
      ssl.trust: "*"
    #  mail.smtp.connectiontimeout: 5000
    #  mail.smtp.timeout: 3000
    #  mail.smtp.writetimeout: 5000

notification:
  exchange: default
  businessevent:
    queue: queue.businessevent
    routingkey: queue.businessevent
  
  kafka:
    #topic: "partyreferencedata.partyreferencedata.tb_outbox"
    topic: "topic.businessevents"
    replication-factor: 1
    partitions: 1
    deadletter: "cdc.DL" 

  #
  # SME Settings
  sms:
    queue: queue.sms
    routingkey: queue.sms
  #
  # Mail Settings
  mail:
    from: ianache@crossnetcorp.com
    queue: queue.mail
    routingkey: queue.mail
  #
  # Webhook Settings
  webhook:
    queue: queue.webhook
    routingkey: queue.webhook
  #
  # WhatsApp Settings
  whatsapp:
    queue: queue.whatsapp
    routingkey: queue.whatsapp
  #
  # Push Settings
  push:
    queue: queue.push
    routingkey: queue.push

kafka:
  bootstrap-servers: "172.17.8.220:9092"
  consumer:
    bootstrap-servers: "172.17.8.220:9092"
    group-id: "notifications"
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer